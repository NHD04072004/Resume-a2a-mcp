from typing import Any, Literal
from pydantic import BaseModel, Field


class PlannerTask(BaseModel):
    """Represents a single task generated by the Planner."""

    id: int = Field(description='Sequential ID for the task.')
    description: str = Field(
        description='Clear description of the task to be executed.'
    )
    status: (
            Any
            | Literal[
                'input_required',
                'completed',
                'error',
                'pending',
                'incomplete',
                'todo',
                'not_started',
            ]
            | None
    ) = Field(description='Status of the task', default='input_required')


class TaskList(BaseModel):
    """Output schema for the Planner Agent."""

    original_query: str | None = Field(
        description='The original user query for context.'
    )

    tasks: list[PlannerTask] = Field(
        description='A list of tasks to be executed sequentially.'
    )
